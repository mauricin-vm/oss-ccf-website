// node prisma/migration/0.1-criar-conselheiros.js

const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

/**
 * Script para criar conselheiros no banco de dados
 * Executa apenas se os conselheiros n√£o existirem
 */

const conselheiros = [
  { nome: 'Adrianne Cristina Coelho Lobo' },
  { nome: 'Adriano Trevejo Zanotti' },
  { nome: 'Arthur Vieira de Oliveira Lav√¥r' },
  { nome: 'Cec√≠lia Saad Cruz Rizkallah' },
  { nome: 'Claudemir De Lima Silva' },
  { nome: 'Cl√°udia de Ara√∫jo Melo' },
  { nome: 'Danilo Isaias Boa Ventura' },
  { nome: 'Denir de Souza Nantes' },
  { nome: 'Emerson Augusto Maeda Taira' },
  { nome: 'Francimar Messias Assis J√∫nior' },
  { nome: 'Jorge Takeshi Otubo' },
  { nome: 'Isabela Batista Machado Soares Scaramal' },
  { nome: 'Larissa Cardoso' },
  { nome: 'Larissa Zirbes Faria' },
  { nome: 'Let√≠cia Sousa de Moura' },
  { nome: 'Lu√≠s Alexandre Holak' },
  { nome: 'Lu√≠s Eduardo Costa' },
  { nome: 'K√°tia Silene Sarturi Warde' },
  { nome: 'Mariana Rodrigues Moreira' },
  { nome: 'Paulo Roberto Barros da Silva' },
  { nome: 'Paulo Victor Medeiros Damasceno' },
  { nome: 'Pedro Sol Milhomem Santos Ferreira' },
  { nome: 'Ricardo Vieira Dias' },
  { nome: 'Rosemeire Aparecida Cristaldo Palmeira' },
  { nome: 'Ronney Alencar Moreira' },
  { nome: 'Sinomar Tiago Rodrigues' },
  { nome: 'Thales Emanoel Azevedo' },
  { nome: 'Victor Pereira Afonso' }
]

async function criarConselheiros() {
  console.log('üöÄ Iniciando cria√ß√£o de conselheiros...')

  try {
    let contadorCriados = 0
    let contadorExistentes = 0

    for (const conselheiroData of conselheiros) {
      // Verificar se o conselheiro j√° existe
      const conselheiroExistente = await prisma.conselheiro.findFirst({
        where: {
          nome: {
            equals: conselheiroData.nome,
            mode: 'insensitive'
          }
        }
      })

      if (conselheiroExistente) {
        console.log(`‚ÑπÔ∏è  Conselheiro j√° existe: ${conselheiroData.nome}`)
        contadorExistentes++
      } else {
        // Criar o conselheiro
        await prisma.conselheiro.create({
          data: {
            nome: conselheiroData.nome,
            ativo: true,
            origem: 'Sistema'
          }
        })
        console.log(`‚úÖ Conselheiro criado: ${conselheiroData.nome}`)
        contadorCriados++
      }
    }

    console.log('\nüìä Resumo da execu√ß√£o:')
    console.log(`‚úÖ Conselheiros criados: ${contadorCriados}`)
    console.log(`‚ÑπÔ∏è  Conselheiros j√° existentes: ${contadorExistentes}`)
    console.log(`üìù Total de conselheiros processados: ${conselheiros.length}`)

    // Verificar total de conselheiros ativos no sistema
    const totalConselheiros = await prisma.conselheiro.count({
      where: { ativo: true }
    })
    console.log(`üèõÔ∏è  Total de conselheiros ativos no sistema: ${totalConselheiros}`)

  } catch (error) {
    console.error('‚ùå Erro ao criar conselheiros:', error)
    throw error
  }
}

async function main() {
  try {
    await criarConselheiros()
    console.log('\nüéâ Migra√ß√£o conclu√≠da com sucesso!')
  } catch (error) {
    console.error('\nüí• Erro durante a migra√ß√£o:', error)
    process.exit(1)
  } finally {
    await prisma.$disconnect()
  }
}

// Executar se o script for chamado diretamente
if (require.main === module) {
  main()
}

module.exports = { criarConselheiros }